* SuperCosmoChord
  :PROPERTIES:
  :CUSTOM_ID: supercosmochord
  :END:
- CosmoChord :: PolyChord + CosmoMC for cosmological parameter
  estimation and evidence calculation

- Author :: Will Handley2

- ForkedFrom :: [[https://github.com/cmbant/CosmoMC]]
gi
- Homepage :: [[http://polychord.co.uk]]

[[https://travis-ci.org/williamjameshandley/CosmoChord][[[https://travis-ci.org/williamjameshandley/CosmoChord.svg?branch=master]]]]

[[https://zenodo.org/badge/latestdoi/158467573][[[https://zenodo.org/badge/158467573.svg]]]]

** Description and installation
   :PROPERTIES:
   :CUSTOM_ID: description-and-installation
   :END:
SuperCosmoChord is a fork of
[[https://github.com/cmbant/CosmoMC][CosmoMC]], which adds nested
sampling provided by PolyChord, and uses superpositional proposal
re-partitioning to accelerate the process.

Installation procedure:

#+begin_src shell
  git clone --recursive https://github.com/williamjameshandley/CosmoChord
  cd CosmoChord
  make
  export OMP_NUM_THREADS=1
  ./cosmomc test.ini
#+end_src

To run, you should add =action=5= to your ini file, and include
=batch3/polychord.ini=. Consider modifying =test.ini=

If you wish to use Planck data, you should follow the
[[https://cosmologist.info/cosmomc/readme_planck.html][CosmoMC planck
instructions]], and then run =make clean; make=; after ---
=source bin/clik_profile.sh=

** Changes from CosmoMC
   :PROPERTIES:
   :CUSTOM_ID: changes-from-cosmomc
   :END:
You can see the key changes by running:

#+begin_src shell
  git remote add upstream https://github.com/cmbant/CosmoMC
  git fetch upstream
  git diff --stat upstream/master
  git diff  upstream/master source 
#+end_src

The changes to CosmoMC are minor:

- Nested sampling heavily samples the tails of the posterior. This means
  that there need to be more corrections for these regions that are
  typically unexplored by the default metropolis hastings tool. This is
  now implemented by separate CAMB git submodule
- You should *not* use openmp parallelisation, as this in inefficient
  when using PolyChord. Instead, you should use pure MPI
  parallelisation, and you may use as many cores as you have live
  points.

** Planck Likelihoods
   :PROPERTIES:
   :CUSTOM_ID: planck-likelihoods
   :END:
As this is a fork of CosmoMC, the process of installing the Planck
likelihoods is identical: - install prerequisites of Planck Code:

#+begin_src shell
  pip install cython astropy
#+end_src

- install =cfitsio= and =astropy=. Most Linux distributions will have
  =cfitsio= in the official repositories. Consult your distribution's
  package repositories.
- Obtain the likelihood code and the baseline data from the
  [[http://pla.esac.esa.int/pla/#home][Planck Legacy archive]]:

#+begin_src shell
  curl "http://pla.esac.esa.int/pla-sl/data-action?COSMOLOGY.COSMOLOGY_OID=151912" --output "COM_Likelihood_CODE-v3.0_R3.01.tar.gz"
  curl "http://pla.esac.esa.int/pla-sl/data-action?COSMOLOGY.COSMOLOGY_OID=151902" --output "COM_Likelihood_Data-baseline_R3.00.tar.gz"
#+end_src

- Alternatively, manually download =COM_Likelihood_Code-*.tar.gz= and
  =COM-Likelihood_Data-*.tar.gz=.
- Unpack the code

#+begin_src shell
  tar xvfz COM_likelihood_Code*.tar.gz 
  cd code/plc-3.0/plc-3.01/ 
#+end_src

- install planck likelihood code with:

#+begin_src shell
  ./waf configure --install_all_deps install
#+end_src

note that if this fails, the =waf= script will attempt to pull the
dependencies from obsolete hardcoded locations. If this is the case,
interrupt (=Ctrl+c=) and install the dependencies manually. See your
linux distribution's package catalogue to find the required libraries.

- Set-up the environment variables. An example profile for =bash= is
  given in =bin/clik_profile.sh=. To avoid frustration, you may wish to
  source the profile at login, e.g. by adding
  =source $(pwd)/bin/clik_profile.sh= to your =.bashrc=.
- Return to the CosmoChord's root directory: =cd ../../..=.
- Unpack the baseline data

#+begin_src shell
  tar xvfz COM_Likelihood_Data-*.tar.gz
#+end_src

- symlink into baseline data into =CosmoChord/data=.

#+begin_src shell
  ln -s baseline/plc3-0 data/clik_14.0
#+end_src

- (re)-build CosmoChord

#+begin_src shell
  make rebuild
#+end_src
